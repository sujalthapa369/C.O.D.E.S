class Solution {
public:
    bool isPrime(int n) {
    if (n < 2) return false;
    for (int i = 2; i <= std::sqrt(n); ++i)
        if (n % i == 0)
            return false;
    return true;
    }
    long long splitArray(vector<int>& nums) {
        int n = nums.size();
        vector<int>A;
        vector<int>B;
        long long sum1 = 0;
        long long sum2=0;
        for(int i=0;i<n;i++)
        {
           if(isPrime(i))
           {
               A.push_back(nums[i]);
           }
            else
           {
               B.push_back(nums[i]);
           }
        }
        for(int i=0;i<A.size();i++)
        {
            sum1 += A[i];        
        }
        for(int j=0;j<B.size();j++)
        {
            sum2 +=B[j];            
        }
        long long result = abs(sum1-sum2);

        return result;
    }
};
